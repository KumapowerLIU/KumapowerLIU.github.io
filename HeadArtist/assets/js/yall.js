function e(e,o){for(const t in o){const n=o[t];e.addEventListener(t,n.listener||n,n.options||void 0)}}function r(e,o){for(const t of n)t in e.dataset&&(e.setAttribute(t,e.dataset[t]),e.classList.contains(o)&&e.classList.remove(o))}function s(e,o,t,n){if("VIDEO"===e.nodeName){const t=Array.from(e.querySelectorAll("source"));for(const e of t)r(e,o);e.load()}r(e,o);const s=e.classList;s.contains(t)&&(s.remove(t),s.add(n))}function i(n){const r=n&&n.lazyClass?n.lazyClass:"lazy",i=n&&n.lazyBackgroundClass?n.lazyBackgroundClass:"lazy-bg",c=n&&n.lazyBackgroundLoaded?n.lazyBackgroundLoaded:"lazy-bg-loaded",a=n&&n.threshold?n.threshold:200,l=n&&n.events?n.events:{},d=!(!n||!n.observeChanges)&&n.observeChanges,u=n&&n.observeRootSelector?n.observeRootSelector:"body",f=n&&n.mutationObserverOptions?n.mutationObserverOptions:{childList:!0,subtree:!0},v=`video.${r},.${i}`;let b=Array.from(document.querySelectorAll(v));for(const o of b)e(o,l);if(!0===o&&!1===t){var y=new IntersectionObserver(e=>{for(const o of e)if(o.isIntersecting||o.intersectionRatio){const{target:e}=o;s(e,r,i,c),y.unobserve(e),0===(b=b.filter(o=>o!==e)).length&&!1===d&&y.disconnect()}},{rootMargin:`${a}px 0%`});for(const e of b)y.observe(e);d&&new MutationObserver(()=>{const n=document.querySelectorAll(v);for(const s of n)b.includes(s)||(b.push(s),e(s,l),!0===o&&!1===t&&y.observe(s))}).observe(document.querySelector(u),f)}else if(t)for(const e of b)s(e,r,i,c)}const o="IntersectionObserver"in window&&"IntersectionObserverEntry"in window&&"intersectionRatio"in window.IntersectionObserverEntry.prototype,t=/baidu|(?:google|bing|yandex|duckduck)bot/i.test(navigator.userAgent),n=["src","poster"];window.yall=i;